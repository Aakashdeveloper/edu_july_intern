https://code.visualstudio.com/download
https://nodejs.org/en/
https://git-scm.com/downloads
https://imgbb.com/


Auto Close Tag
vscode-icons
gitlens
git history
tabnine

// design(static website)
HTML  > Structure
CSS   > Design 
Bootstrap > Responsive

////// dynamic            
> Javascript > Logical

>>>backend (Api)
Node JS

>>>Database
MongoDb (nosql database)
Redis   (caching)
Postgres(optional)(overview)

>>> Frontend
React 

Payment gateway (paytm)
Email Server (email)
Oauth (Login With Google/github)
Login/Logout (with Jwt)

Deployment
> Ci/Cd with AWS
> Heroku

Overview (optional)
mobile app development
> React Native

>>>>> 
Customer
Vendor
> Order
> Accept reject 
> Add more item


inside head Tag 
> link of css
> link of javascript
> title
> favicon
> meta tag

inside body tag
> all the other tags
> things we want to display on the page

closing
self closing

> what we write between tag
(<h2>Heading 2</h2>)
so here heading we call it as data

> When we write inside tag
(<img src="" alt=""/>)
we call them as attribute/property


////////
Inline Element > those start in same line
Block LevelElement > those start in new line

_target > open website in new tab


single template page
//////
without html css is nothing
> css is all about design
> 

inline > style tag > stylesheet

<h1></h1>
{   
    color:red,
    fontsize:1,
    text-align:center,
    marign:10
}


inline 
{
   color:red
   fontsize:1
}

styleTag{
    fontsize:2,
    text-align:center
    
}

stylesheet{
   color:orange
   fontsize:2
   text-align:right
   marign:10
}


Tag Name > Target using tagName (h1,p)
 # Id > When you want to target unique Element
 . Class> When you want to target group of Element


git init
git add .
git commit -m "first commit"
git remote add origin https://github.com/Aakashdeveloper/secondproject.git
git push -u origin master

download gitbash
https://git-scm.com/downloads


git add .
git commit -m "first commit"
git push


Bootstrap
>> Pre Written CSS Done by Twitter

lg <1200
md <992
sm <768
xs >768

primary >blue
success >green
warning >orange
danger  >red
info    >skyblue

bootstrap4
col- <576
col-sm >576
col-md >768
col-lg > 992
col-xl >1200

https://getbootstrap.com/docs/5.1/getting-started/introduction/

https://docs.github.com/en/github/authenticating-to-github/keeping-your-account-and-data-secure/creating-a-personal-access-token

https://stackoverflow.com/users/3687251/aakash-handa


String opertions
math operations
String literals(Contact)
ifelse
ternory
array
localstorage
sessionstorage
cookie
loop
map
object
JSON
Api Calling
Fetch
Promise
async await
geolocation
light/dark


Filter
let const

http://api.openweathermap.org/data/2.5/forecast/daily?q=Delhi&mode=json&units=metric&cnt=5&appid=fbf712a5a83d7305c3cda4ca8fe7ef29

//dummy api
** NodeJs must be install in system
// only one time
> open cmd as Administrator
> npm i -g json-server
> close cmd


>>Everytime you want to generate api<<
> open new cmd
> go inside the folder
> cd and path
> json-server --watch data.json --port 4500


///mac/linux
// only one time
> open terminal
> sudo npm i -g json-server


///NodeJs
> Npm
> Inbuilt Package
> FullStack with Node
(Node, Express, html/css/bs/EJS, MongoDB)

> Rest Api
> How to Create Login/logout(backend)
> payment gateway
> Deployment

>>>>NPM<<<<
node package manger

package.json
> first file in app
> metadata(name,version,description,author)
> commands (run, test)
> packages

//// steps to generate package.json ////
**NodeJs must be installed in system
> go inside the folder using cmd/terminal
> npm init
> Answer all questions
> type "yes"


//// steps to install packages ////
> go inside the folder using cmd/terminal
> npm i packagename

C> Create (insert)(post)
R> Read (Get)
U> Update (put/patch)
D> Delete (delete)

Get
Post
Put
Delete

// have to install global
nodemon
> open cmd as admin
> npm i -g nodemon
> close cmd

//////////////
params 
> pass after / we call it as params
> compulsory and need to declare
> req.params.paramname

queryparams 
> pass after ? we call it as queryparams
> not compulsory and no need to declare
> req.query.queryparamsName


//////Deployment/////
> push code to github (https://github.com/Aakashdeveloper/eduAugApi)
> https://id.heroku.com/login  (login)
> click on new
> create new app
> provide appname
> click on deploy
> click on github on the same page and signin
> enter repo name
> click search
> click connect
> deploy branch
> click on view


ejs
embedded javascript


var a = [ '1,BreakFast', '2,Lunch', '3,Dinner' ]
var out = []

a.map((data) => {
    var val = data.split(',')
    var obj = {}
    obj.mealtype = val[0];
    obj.name = val[1]
    out.push(obj)
})

morgan > for logs
cors
chalk
pm2
passport
lodash
nodemailer

React is an frontend framework that help to build 
single page applications

>>>>>>>>><<<<<<<<<<
Step to setup react

>>window
> open cmd as Administrator
> npm i -g create-react-app

>>When you need app
> open cmd
> go inside the folder
> create-react-app appname


>>> mac/linux
> open terminal
> sudo npm i -g create-react-app


>>When you need app
> open terminal
> go inside the folder
> create-react-app appname

react   >>> main library
react-dom >> help to render content
react-script >> help to run the applications

/////component/////
> functional
>> Dumb component
>> we will use for display puropose
>> we cannot maintain the state

> classComponenet
>> logical Component
>> we will use for display purpose as well as api call
>> we can maintain the state

state
> its a local variable
> each component can have its own state
> we can update the value of state (mutable)
> we can only interact with data with state

props
> it is use to pass the data from one component to Another
(component must be nested)
> we cannot update the value of props

parent > child (props)
child > parent (props with functions)

function add(komal, komal1){
    return komal+komal1
}

add(1,2)

//// default props////
history > redirect
location > for query params
match > for params